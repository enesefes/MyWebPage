{"version":3,"sources":["components/ProjectData.js","base.js","App.js","serviceWorker.js","index.js","images/Logo.png","images/myPhoto.jpeg","images/code.svg"],"names":["ProjectDatabase","project","className","Card","Grid","container","spacing","item","xs","style","background","fields","background_color","src","Platform_logo_link","Platform_name","Typography","id","gutterBottom","variant","component","Title","color","Description","Button","href","Source","target","size","Link","CUrl","base","Airtable","apiKey","App","useState","setProject","useEffect","select","view","eachPage","records","fetchNextPage","logo","alt","rel","myPhoto","code","fontSize","map","e","ProjectData","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"mUAkGeA,MAlFf,YAAqC,IAAXC,EAAU,EAAVA,QAKtB,OACI,6BAGA,yBAAKC,UAAU,qBACf,kBAACC,EAAA,EAAD,KA4BA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,yBAAKN,UAAU,UAAUO,MAAO,CAACC,WAAWT,EAAQU,OAAOC,mBACvD,yBAAKV,UAAU,gBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAaW,IAAKZ,EAAQU,OAAOG,qBACf,sBAAhCb,EAAQU,OAAOI,eAAyC,kDAE3D,6BACA,kBAACC,EAAA,EAAD,CAAYC,GAAG,mBAAmBC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MACnEnB,EAAQU,OAAOU,OAElB,kBAACL,EAAA,EAAD,CAAYG,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,KACzDnB,EAAQU,OAAOY,cAGlB,6BACE,kBAACC,EAAA,EAAD,CAAQC,KAAMxB,EAAQU,OAAOe,OAAQC,OAAO,SAASV,GAAG,sBAAsBW,KAAK,QAAQN,MAAM,WAAjG,eAGA,kBAACE,EAAA,EAAD,CAAQC,KAAMxB,EAAQU,OAAOkB,KAAMF,OAAO,SAASV,GAAG,SAASE,QAAQ,YAAYS,KAAK,QAAQN,MAAM,WAAtG,oBASJ,yBAAKpB,UAAU,iBACX,yBAAKW,IAAKZ,EAAQU,OAAOmB,e,QChFhCC,EAFF,I,OAAIC,GAAS,CAACC,OAAQ,sBAAsBF,KAAK,qB,wICqL/CG,MAnJf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENlC,EAFM,KAEGmC,EAFH,KAyBb,OAjBAC,qBAAU,WACRN,EAAK,WAAWO,OAAO,CAGrBC,KAAM,cACPC,UAAS,SAACC,EAASC,GAClBN,EAAYK,GACZC,UAYF,yBAAKxC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKW,IAAK8B,IAAMzC,UAAU,WAAW0C,IAAI,SACzC,yBAAK1C,UAAU,iBACb,uBAAGuB,KAAK,kCAAkCoB,IAAI,sBAAsBlB,OAAO,UAA3E,eAGJ,yBAAKzB,UAAU,QACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wBACb,mFACA,oEAEF,yBAAKA,UAAU,YAAYW,IAAKiC,IAASF,IAAI,oBAKjD,yBAAK1C,UAAU,mBACX,yBAAKW,IAAKkC,IAAMH,IAAI,gBAExB,yBAAK1C,UAAU,gBACX,yBAAKA,UAAU,uBACf,iEACA,0PAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAA0B8C,SAAS,UACnC,gDACA,uBAAG9C,UAAU,WAAb,sBAA0C,uBAAGA,UAAU,eAAb,oBAA1C,oCACA,uBAAGA,UAAU,iBAAb,6BACA,sEACA,uBAAGA,UAAU,iBAAb,6BACA,uDAA4B,6BAA5B,kCAAgE,6BAAhE,sCAAwG,6BAAxG,8BAAwI,6BAAxI,6BAAuK,6BAAvK,2CAAoN,6BAApN,mCAAyP,6BAAzP,8BAAyR,6BAAzR,wBAEF,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAkB8C,SAAS,UAC3B,mDACA,uBAAG9C,UAAU,WAAb,8DAAkF,uBAAGA,UAAU,eAAb,aAAlF,kCACA,uBAAGA,UAAU,iBAAb,sBACA,oEACA,uBAAGA,UAAU,wBAAb,UACA,uCAAY,6BAAZ,cAA4B,6BAA5B,YAA0C,6BAA1C,YAAwD,6BAAxD,SAAmE,6BAAnE,aAEF,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAA0B8C,SAAS,UACnC,4CACA,uBAAG9C,UAAU,WAAb,IAAwB,uBAAGA,UAAU,eAAb,8CAAxB,iCACA,uBAAGA,UAAU,iBAAb,8BACA,oEACA,uBAAGA,UAAU,iBAAb,aACA,kBAAC,IAAD,CAA2Be,GAAG,mBAOpC,yBAAKf,UAAU,gBACP,8CAGA,yBAAKA,UAAU,YAEdD,EAAQgD,KAAI,SAACC,GAAD,OACT,kBAACC,EAAD,CAAiBC,IAAKF,EAAEjC,GAAIhB,QAASiD,SAQjD,yBAAKhD,UAAU,WACb,yEACA,gHAGA,uBAAGuB,KAAK,kCAAkCoB,IAAI,sBAAsBlB,OAAO,UAA3E,yBAIF,4BAAQzB,UAAU,UAChB,yBAAKA,UAAU,eACb,yBAAKW,IAAK8B,IAAMC,IAAI,uBAEtB,+CACA,yBAAK1C,UAAU,kBACb,uBAAGuB,KAAK,wCAAwCoB,IAAI,sBAAsBlB,OAAO,UAC/E,yBAAKzB,UAAU,yBACb,kBAAC,IAAD,QAGJ,uBAAGuB,KAAK,8BAA8BoB,IAAI,sBAAsBlB,OAAO,UACvE,yBAAKzB,UAAU,yBACb,kBAAC,IAAD,QAGF,uBAAGuB,KAAK,uCAAuCoB,IAAI,sBAAsBlB,OAAO,UAChF,yBAAKzB,UAAU,yBACb,kBAAC,IAAD,QAGF,uBAAGuB,KAAK,kCAAkCoB,IAAI,sBAAsBlB,OAAO,UAC3E,yBAAKzB,UAAU,yBACb,kBAAC,IAAD,YC/JQmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.48c7b7ca.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./projectData.css\"\r\n\r\n\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport { StarTwoTone } from '@material-ui/icons';\r\n\r\n\r\nfunction ProjectDatabase({project}) {\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n                \r\n            \r\n        <div className=\"project_contanier\">\r\n        <Card >\r\n        {/*\r\n          <CardActionArea href={project.fields.Link} target=\"_blank\">\r\n            <CardMedia id=\"project__card__image\"\r\n              component=\"img\"\r\n              alt=\"Contemplative Reptile\"\r\n              height=\"140\"\r\n              image={project.fields.CUrl}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography id=\"project__heading\" gutterBottom variant=\"h5\" component=\"h2\">\r\n                {project.fields.Title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {project.fields.Description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button href={project.fields.Source} target=\"_blank\" id=\"button__noneBgColor\" size=\"small\" color=\"primary\">\r\n              Source Code\r\n            </Button>\r\n            <Button href={project.fields.Link} target=\"_blank\" id=\"button\" variant=\"contained\" size=\"small\" color=\"primary\">\r\n              Visit Web Page\r\n            </Button>\r\n          </CardActions>\r\n        */}\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n              <div className=\"project\" style={{background:project.fields.background_color}}>\r\n                  <div className=\"project_left\">\r\n                    <div className=\"project_platform\">\r\n                      <img className=\"brand_logo\" src={project.fields.Platform_logo_link}></img>\r\n                      {project.fields.Platform_name == \"Custom Development\" && <p>Custom Development</p>}\r\n                    </div>\r\n                    <div>\r\n                    <Typography id=\"project__heading\" gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {project.fields.Title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {project.fields.Description}\r\n                    </Typography>\r\n                    </div>\r\n                    <div>\r\n                      <Button href={project.fields.Source} target=\"_blank\" id=\"button__noneBgColor\" size=\"small\" color=\"primary\">\r\n                        Source Code\r\n                      </Button>\r\n                      <Button href={project.fields.Link} target=\"_blank\" id=\"button\" variant=\"contained\" size=\"small\" color=\"primary\">\r\n                        Visit Web Page\r\n                      </Button>\r\n                      \r\n                      \r\n                      \r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className=\"project_right\">\r\n                      <img src={project.fields.CUrl} />\r\n                  </div>\r\n              </div>\r\n          </Grid>\r\n\r\n        </Grid>\r\n        </Card>\r\n</div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProjectDatabase\r\n","import Airtable from \"airtable\"\r\n\r\nconst base = new Airtable({apiKey: 'keyogwD6vVcXyASVC'}).base('app9zfPCWF8CLuGyG');\r\n\r\nexport default base;\r\n","import React from 'react';\r\nimport logo from './images/Logo.png';\r\n\r\nimport myPhoto from './images/myPhoto.jpeg';\r\n\r\nimport code from \"./images/code.svg\"\r\n\r\nimport './App.css';\r\nimport ProjectDatabase from './components/ProjectData';\r\nimport base from './base';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n\r\nimport SportsSoccerOutlinedIcon from '@material-ui/icons/SportsSoccerOutlined';\r\nimport CodeOutlinedIcon from '@material-ui/icons/CodeOutlined';\r\nimport EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { FindInPage } from '@material-ui/icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [project, setProject] = useState([]);\r\n  \r\n  \r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    base('Project').select({\r\n      // Selecting the first 3 records in Grid view:\r\n      // filterByFormula:`{${Shopify}} = ${Platforms}`,\r\n      view: \"Grid view\",\r\n  }).eachPage((records, fetchNextPage) => {\r\n      setProject (records);\r\n      fetchNextPage();\r\n    });\r\n\r\n  \r\n\r\n    \r\n  });\r\n\r\n  \r\n\r\n  return (\r\n    \r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n        <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n        <div className=\"header__right\">\r\n          <a href=\"mailto:enes_efe_158@hotmail.com\" rel=\"noopener noreferrer\" target=\"_blank\">Say Hello</a>\r\n        </div>\r\n      </header>\r\n      <div className=\"home\">\r\n        <div className=\"home_container\">\r\n          <div className=\"home_container_texts\">\r\n            <h1>Sports Scientist, Front End Developer, Entrepreneur</h1>\r\n            <p>I love solving the problems near me.</p>\r\n          </div>\r\n          <img className=\"my__photo\" src={myPhoto} alt=\"enes-efePhoto\"/>\r\n        </div>\r\n       \r\n      </div>\r\n\r\n      <div className=\"home__codePhoto\">\r\n          <img src={code} alt=\"code_photo\"/>\r\n        </div>\r\n      <div className=\"home__second\">\r\n          <div className=\"home__second__texts\">\r\n          <h1>Hello I'm Enes. Nice to meet you.</h1>\r\n          <h2> I started problem solving with curiosity. At first, curiosity made me feel lost alone in such a large sea. Then this curiosity got more and more, and now I have been solving the problems around me using technology. </h2>\r\n          </div>\r\n      </div>\r\n      <div className=\"about_me\">\r\n        <div className=\"jobs\">\r\n          <div className=\"about_me_jobs\">\r\n            <SportsSoccerOutlinedIcon fontSize=\"large\"/>\r\n            <h1>Sports Scientist</h1>\r\n            <p className=\"jobs__p\"> I love working on <b className=\"bold__color\">new technologies</b> in the field of sports science.</p>\r\n            <p className=\"jobs__p__head\">Topics I'm interested in:</p>\r\n            <p>Sport Analyze, Performance, Flexibility</p>\r\n            <p className=\"jobs__p__head\">Diploma and Certificates:</p>\r\n            <p>Sports Management (B.Sc.)<br/>Sports Coaching (Double  Major)<br/>Pedagogical Formation (Certificate)<br/>TFF. C Football Certificate<br/>Pilates Reformer Level - 1<br/>Iaaf Kids' Athletics Coach (Certificate)<br/> Taekwondo (Black Belts 1. Dan) <br/> Kick Boxing (Brown Belts) <br/>Muay Thai (9. Khan)</p>\r\n          </div>\r\n          <div className=\"about_me_jobs\">\r\n            <CodeOutlinedIcon fontSize=\"large\"/>\r\n            <h1>Front End Developer</h1>\r\n            <p className=\"jobs__p\"> I love coding and releasing new products. Also, thanks to <b className=\"bold__color\">curiosity</b>, I can realize many projects.</p>\r\n            <p className=\"jobs__p__head\">Languages I speak:</p>\r\n            <p>Html, Css, Javascript, React, Svelte,</p>\r\n            <p className=\"jobs__p__head__tools\">Tools:</p>\r\n            <p>Bubble.io<br/>Material Ui<br/>Bootstrap<br/>Photoshop<br/>Github<br/>Terminal</p>\r\n          </div>\r\n          <div className=\"about_me_jobs\">\r\n            <EmojiObjectsOutlinedIcon fontSize=\"large\"/>\r\n            <h1>Entrepreneur</h1>\r\n            <p className=\"jobs__p\"> <b className=\"bold__color\"> Finding solutions to problems in some way</b> is at the center of my life.</p>\r\n            <p className=\"jobs__p__head\">Sectors I'm Interested in:</p>\r\n            <p>Sports, Saas, Marketplace, E-commerce</p>\r\n            <p className=\"jobs__p__head\">Projects:</p>\r\n            <ArrowDownwardOutlinedIcon id=\"below__icon\"/>\r\n          </div>\r\n          \r\n        </div>\r\n       \r\n            \r\n      </div>\r\n      <div className=\"my__projects\">\r\n              <h1>My Recent Work</h1>\r\n              \r\n              \r\n              <div className=\"projects\">\r\n              \r\n              {project.map((e) => (\r\n                  <ProjectDatabase key={e.id} project={e}></ProjectDatabase>\r\n                ))}\r\n              </div>\r\n\r\n             \r\n                \r\n                                                                         \r\n      </div>\r\n      <div className=\"contact\">\r\n        <h1>Interested in collaborating or investing?</h1>\r\n        <p>I’m always open to discussing web development, or partnership opportunities.</p>\r\n        \r\n        \r\n        <a href=\"mailto:enes_efe_158@hotmail.com\" rel=\"noopener noreferrer\" target=\"_blank\">Start a conversation</a>\r\n        \r\n        \r\n      </div>\r\n      <footer className=\"footer\">\r\n        <div className=\"footer__img\">\r\n          <img src={logo} alt=\"iamenes.com__Logo\"/>\r\n        </div>\r\n        <p>Lifetime student</p>\r\n        <div className=\"footer__social\">\r\n          <a href=\"https://www.linkedin.com/in/enes-efe/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <div className=\"footer_social__Button\" >\r\n              <LinkedInIcon />\r\n            </div>\r\n          </a>\r\n          <a href=\"https://github.com/enesefes\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n          <div className=\"footer_social__Button\">\r\n            <GitHubIcon/>\r\n          </div>\r\n          </a>\r\n          <a href=\"https://www.instagram.com/enes_efes/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n          <div className=\"footer_social__Button\">\r\n            <InstagramIcon/>\r\n          </div>\r\n          </a>\r\n          <a href=\"mailto:enes_efe_158@hotmail.com\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n          <div className=\"footer_social__Button\">\r\n            <MailIcon/>\r\n          </div>\r\n          </a>\r\n\r\n          \r\n        </div>\r\n      </footer>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo.963bd212.png\";","module.exports = __webpack_public_path__ + \"static/media/myPhoto.d3ebbca7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/code.ca3e33ae.svg\";"],"sourceRoot":""}